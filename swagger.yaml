---
openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  "/users/token":
    post:
      tags:
        - users
      summary: Login For Access Token
      operationId: login_for_access_token_users_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Body_login_for_access_token_users_token_post"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/users/":
    post:
      tags:
        - users
      summary: Create User
      operationId: create_user_users__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    get:
      tags:
        - users
      summary: Read Users
      operationId: read_users_users__get
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserRead"
                title: Response Read Users Users  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/users/me":
    get:
      tags:
        - users
      summary: Read Users Me
      operationId: read_users_me_users_me_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserRead"
      security:
        - OAuth2PasswordBearer: []
  "/users/{user_id}":
    get:
      tags:
        - users
      summary: Read User
      operationId: read_user_users__user_id__get
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
        - users
      summary: Update User
      operationId: update_user_users__user_id__put
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
        - users
      summary: Delete User
      operationId: delete_user_users__user_id__delete
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/products/":
    post:
      tags:
        - products
      summary: Create Product
      operationId: create_product_products__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProductCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    get:
      tags:
        - products
      summary: Read Products
      operationId: read_products_products__get
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductRead"
                title: Response Read Products Products  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/products/{product_id}":
    get:
      tags:
        - products
      summary: Read Product
      operationId: read_product_products__product_id__get
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
        - products
      summary: Update Product
      operationId: update_product_products__product_id__put
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProductCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
        - products
      summary: Delete Product
      operationId: delete_product_products__product_id__delete
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/reviews/":
    post:
      tags:
        - reviews
      summary: Create Review
      operationId: create_review_reviews__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReviewCreate"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReviewRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
  "/reviews/product/{product_id}":
    get:
      tags:
        - reviews
      summary: Read Reviews For Product
      operationId: read_reviews_for_product_reviews_product__product_id__get
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ReviewRead"
                title:
                  Response Read Reviews For Product Reviews Product  Product
                  Id  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/reviews/{review_id}":
    get:
      tags:
        - reviews
      summary: Read Review
      operationId: read_review_reviews__review_id__get
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            title: Review Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReviewRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
        - reviews
      summary: Delete Review
      operationId: delete_review_reviews__review_id__delete
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            title: Review Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReviewRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/cart/{user_id}":
    get:
      tags:
        - cart
      summary: Read Cart
      operationId: read_cart_cart__user_id__get
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CartRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/cart/{user_id}/items":
    post:
      tags:
        - cart
      summary: Add To Cart
      operationId: add_to_cart_cart__user_id__items_post
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CartItemAdd"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CartRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/cart/{user_id}/items/{product_id}":
    delete:
      tags:
        - cart
      summary: Remove From Cart
      operationId: remove_from_cart_cart__user_id__items__product_id__delete
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CartRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/orders/from_cart/{user_id}":
    post:
      tags:
        - orders
      summary: Create Order From Cart
      operationId: create_order_from_cart_orders_from_cart__user_id__post
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/orders/{order_id}":
    get:
      tags:
        - orders
      summary: Read Order
      operationId: read_order_orders__order_id__get
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            title: Order Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderRead"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/orders/user/{user_id}":
    get:
      tags:
        - orders
      summary: Read Orders For User
      operationId: read_orders_for_user_orders_user__user_id__get
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderRead"
                title: Response Read Orders For User Orders User  User Id  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Body_login_for_access_token_users_token_post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: "^password$"
            - type: "null"
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          format: password
          title: Password
        scope:
          type: string
          title: Scope
          default: ""
        client_id:
          anyOf:
            - type: string
            - type: "null"
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: "null"
          format: password
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_for_access_token_users_token_post
    CartItemAdd:
      properties:
        product_id:
          type: integer
          title: Product Id
        quantity:
          type: integer
          title: Quantity
      type: object
      required:
        - product_id
        - quantity
      title: CartItemAdd
    CartRead:
      properties:
        cart_id:
          type: integer
          title: Cart Id
        user:
          "$ref": "#/components/schemas/UserSimple"
        products:
          items:
            "$ref": "#/components/schemas/ProductSimple"
          type: array
          title: Products
          default: []
      type: object
      required:
        - cart_id
        - user
      title: CartRead
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    OrderRead:
      properties:
        order_id:
          type: integer
          title: Order Id
        status:
          type: string
          title: Status
        total_amount:
          type: string
          title: Total Amount
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          title: Created At
        user:
          "$ref": "#/components/schemas/UserSimple"
        products:
          items:
            "$ref": "#/components/schemas/ProductSimple"
          type: array
          title: Products
          default: []
      type: object
      required:
        - order_id
        - status
        - total_amount
        - created_at
        - user
      title: OrderRead
    ProductCreate:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        price:
          anyOf:
            - type: number
            - type: string
          title: Price
        stock_quantity:
          type: integer
          title: Stock Quantity
      type: object
      required:
        - name
        - price
        - stock_quantity
      title: ProductCreate
    ProductRead:
      properties:
        product_id:
          type: integer
          title: Product Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        price:
          type: string
          title: Price
        stock_quantity:
          type: integer
          title: Stock Quantity
        reviews:
          items:
            "$ref": "#/components/schemas/ReviewRead"
          type: array
          title: Reviews
          default: []
      type: object
      required:
        - product_id
        - name
        - price
        - stock_quantity
      title: ProductRead
    ProductSimple:
      properties:
        product_id:
          type: integer
          title: Product Id
        name:
          type: string
          title: Name
        price:
          type: string
          title: Price
      type: object
      required:
        - product_id
        - name
        - price
      title: ProductSimple
    ReviewCreate:
      properties:
        rating:
          type: integer
          title: Rating
        comment:
          type: string
          title: Comment
        product_id:
          type: integer
          title: Product Id
      type: object
      required:
        - rating
        - comment
        - product_id
      title: ReviewCreate
    ReviewRead:
      properties:
        review_id:
          type: integer
          title: Review Id
        rating:
          type: integer
          title: Rating
        comment:
          type: string
          title: Comment
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          title: Created At
        user:
          "$ref": "#/components/schemas/UserSimple"
        product:
          "$ref": "#/components/schemas/ProductSimple"
      type: object
      required:
        - review_id
        - rating
        - comment
        - created_at
        - user
        - product
      title: ReviewRead
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
        - access_token
        - token_type
      title: Token
    UserCreate:
      properties:
        username:
          type: string
          title: Username
        email:
          type: string
          title: Email
        name:
          type: string
          title: Name
        password:
          type: string
          title: Password
      type: object
      required:
        - username
        - email
        - name
        - password
      title: UserCreate
    UserRead:
      properties:
        username:
          type: string
          title: Username
        email:
          type: string
          title: Email
        name:
          type: string
          title: Name
        user_id:
          type: integer
          title: User Id
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          title: Created At
      type: object
      required:
        - username
        - email
        - name
        - user_id
        - created_at
      title: UserRead
    UserSimple:
      properties:
        user_id:
          type: integer
          title: User Id
        username:
          type: string
          title: Username
      type: object
      required:
        - user_id
        - username
      title: UserSimple
    UserUpdate:
      properties:
        username:
          anyOf:
            - type: string
            - type: "null"
          title: Username
        email:
          anyOf:
            - type: string
            - type: "null"
          title: Email
        password:
          anyOf:
            - type: string
            - type: "null"
          title: Password
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      type: object
      title: UserUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: "/users/token"
